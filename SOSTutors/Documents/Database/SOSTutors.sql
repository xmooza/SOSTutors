-- MySQL Script generated by MySQL Workbench
-- 02/05/16 21:03:27
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema blog
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema blog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `blog` DEFAULT CHARACTER SET latin1 ;
USE `blog` ;

-- -----------------------------------------------------
-- Table `blog`.`tutors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`tutors` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NULL,
  `email` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  `hourly` VARCHAR(45) NULL,
  `rating` VARCHAR(45) NULL,
  `password` CHAR(32) NOT NULL,
  `date_joined` VARCHAR(45) NULL,
  `lname` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`session_categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`session_categories` (
  `id` INT NOT NULL,
  `subject` VARCHAR(45) NULL,
  `description` TEXT NULL,
  `level` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`students`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`students` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fname` VARCHAR(45) NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` CHAR(32) NOT NULL,
  `date_joined` VARCHAR(45) NULL,
  `lname` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `email`, `password`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`bookings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`bookings` (
  `id` INT NOT NULL,
  `date` VARCHAR(45) NULL,
  `place` VARCHAR(45) NULL,
  `confirmed` TINYINT(1) NULL,
  `students_id` INT NOT NULL,
  `location` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_bookings_students_idx` (`students_id` ASC),
  CONSTRAINT `fk_bookings_students`
    FOREIGN KEY (`students_id`)
    REFERENCES `blog`.`students` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`sessions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(144) NOT NULL,
  `content` TEXT NULL,
  `date_published` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `available` TINYINT(1) NOT NULL DEFAULT 1,
  `tutors_id` INT NOT NULL,
  `session_categories_id` INT NOT NULL,
  `bookings_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sessions_tutors1_idx` (`tutors_id` ASC),
  INDEX `fk_sessions_session_categories1_idx` (`session_categories_id` ASC),
  INDEX `fk_sessions_bookings1_idx` (`bookings_id` ASC),
  CONSTRAINT `fk_sessions_tutors1`
    FOREIGN KEY (`tutors_id`)
    REFERENCES `blog`.`tutors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sessions_session_categories1`
    FOREIGN KEY (`session_categories_id`)
    REFERENCES `blog`.`session_categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sessions_bookings1`
    FOREIGN KEY (`bookings_id`)
    REFERENCES `blog`.`bookings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `comment` TEXT NOT NULL,
  `date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `tutors_id` INT NOT NULL,
  `students_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_comment_tutors1_idx` (`tutors_id` ASC),
  INDEX `fk_comments_students1_idx` (`students_id` ASC),
  CONSTRAINT `fk_comment_tutors1`
    FOREIGN KEY (`tutors_id`)
    REFERENCES `blog`.`tutors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_students1`
    FOREIGN KEY (`students_id`)
    REFERENCES `blog`.`students` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`images`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`images` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `blog`.`notifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `blog`.`notifications` (
  `id` INT NOT NULL,
  `subject` VARCHAR(45) NULL,
  `content` VARCHAR(45) NULL,
  `students_id` INT NOT NULL,
  `tutors_id` INT NOT NULL,
  `date` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notifications_students1_idx` (`students_id` ASC),
  INDEX `fk_notifications_tutors1_idx` (`tutors_id` ASC),
  CONSTRAINT `fk_notifications_students1`
    FOREIGN KEY (`students_id`)
    REFERENCES `blog`.`students` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notifications_tutors1`
    FOREIGN KEY (`tutors_id`)
    REFERENCES `blog`.`tutors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
